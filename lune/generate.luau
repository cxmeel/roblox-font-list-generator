--!strict
local process = require("@lune/process")

local CloudFonts = require("lib/CloudFonts")
local LocalFonts = require("lib/LocalFonts")

local colors = require("utils/colors")
local logger = require("utils/logger")
local ufs = require("utils/ufs")

local localFonts = LocalFonts.fetchLocalFonts()
local cloudFonts = CloudFonts.fetchCloudFonts()

logger.debug("Found", colors.bold(#localFonts), "local fonts and", colors.bold(#cloudFonts), "cloud fonts")
print("Building font list from", colors.bold(#localFonts + #cloudFonts), "fonts")

local source = {
	[[--!strict
-- This file is automatically generated by Font List Generate
-- by @cxmeel (cxmeels). Do not edit this file manually.

export type IFont = {
    ContentUri: string,
    Name: string,
    Aliases: { string },
    Weights: { Enum.FontWeight },
    Styles: { Enum.FontStyle },
}

local fonts: { IFont } = {
    -- Local fonts --]],
}

table.sort(localFonts, function(a, b)
    return a.Name < b.Name
end)

for _, font in localFonts do
	table.insert(source, `{font:ToString()},`)
end

table.insert(source, "-- Cloud fonts --")

table.sort(cloudFonts, function(a, b)
    return a.Name < b.Name
end)

for _, font in cloudFonts do
	table.insert(source, `{font:ToString()},`)
end

table.insert(
	source,
	[[}

return fonts
]]
)

print("Writing font list to", colors.blue("build/FontList.lua"))
ufs.writeFile("build/FontList.lua", table.concat(source, "\n"))

logger.info("Formatting font list with stylua")
logger.debug("Config path:", colors.blue(".generated.stylua.toml"))
process.spawn("stylua", { "build/", "--config-path", ".generated.stylua.toml" })

print(colors.green.bold.inverse(" SUCCESS "), "Font list generated successfully! ðŸŽ‰")
